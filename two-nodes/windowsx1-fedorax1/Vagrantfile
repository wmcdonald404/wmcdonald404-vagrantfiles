# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.define :win01 do |win01|
    win01.vm.box = "jborean93/WindowsServer2022"
    win01.vm.hostname = "win01"
    win01.vm.network "private_network", ip: "10.0.0.10"
    win01.vm.provision "shell", name: "Disable IPv6 | Allow ICMP", inline: <<-SHELL
      Get-NetAdapter | foreach { Disable-NetAdapterBinding -Name $_.Name -ComponentID "ms_tcpip6" -Confirm:$false }
      Get-NetFirewallrule -DisplayName "Core Networking Diagnostics - ICMP Echo Request (ICMPv4-In)" | Where-Object -Property Profile -Contains -Value "Private, Public" | Enable-NetFirewallRule 
    SHELL
    win01.vm.provision "shell", 
      name: "Active Directory Domain Controller Setup",
      path: "./scripts/powershell/createdomaincontroller.ps1",
      reboot: "true"
    win01.vm.provision "shell",
      name: "Create Active Directory Security Groups",
      path: "./scripts/powershell/createsecuritygroups.ps1"
    win01.vm.provision "shell",
      name: "Create Active Directory Domain Users",
      path: "./scripts/powershell/createdomainusers.ps1"
    win01.vm.provision "shell",
      name: "Allocate Users to Security Groups",
      path: "./scripts/powershell/allocategroupmembership.ps1"
  end

  config.vm.define :lnx01 do |lnx01|
    lnx01.vm.box = "fedora/41-cloud-base"
    lnx01.vm.hostname = "lnx01"
    lnx01.vm.network "private_network", ip: "10.0.0.20"
    lnx01.vm.provision "shell",
      name: "Install Base Software",
      path: "./scripts/shell/installbasesoftware.sh"
  end

end

# DONE: Figure out how to unfuck https://vagrant-libvirt.github.io/vagrant-libvirt/configuration.html#networks
# https://wiki.libvirt.org/VirtualNetworking.html
# Using the bundled libvirt, with the upstream Hashicorp Vagrant release and 
# plugin seems like the most stable option in terms of moderately advanced
# networking.

# lnx01.vm.provision "shell", inline: <<-SHELL
#   dnf -yq install nss-mdns avahi-tools
#   systemctl enable --now avahi-daemon.service
#   sysctl -w net.ipv6.conf.all.disable_ipv6=1 >> /etc/sysctl.conf
#   sysctl -w net.ipv6.conf.default.disable_ipv6=1 >> /etc/sysctl.conf
#   # sysctl -p
# SHELL
