# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.define :alpha do |alpha|
    alpha.vm.box = "jborean93/WindowsServer2022"
    alpha.vm.hostname = "alpha"
    alpha.vm.network "private_network", ip: "10.0.0.10"
    # alpha.vm.network "private_network", ip: "10.0.0.10", :libvirt__domain_name => "alpha.local"
    # alpha.vm.provision "shell", 
    #   name: "Active Directory Domain Controller Setup",
    #   path: "./scripts/powershell/createdomaincontroller.ps1",
    #   reboot: "true"
    # alpha.vm.provision "shell",
    #   name: "Create Active Directory Security Groups",
    #   path: "./scripts/powershell/createsecuritygroups.ps1"
    # alpha.vm.provision "shell",
    #   name: "Create Active Directory Domain Users",
    #   path: "./scripts/powershell/createdomainusers.ps1"
    # alpha.vm.provision "shell",
    #   name: "Allocate Users to Security Groups",
    #   path: "./scripts/powershell/allocategroupmembership.ps1"  
  end

  config.vm.define :beta do |beta|
    beta.vm.box = "fedora/41-cloud-base"
    beta.vm.hostname = "beta"
    beta.vm.network "private_network", ip: "10.0.0.20", :libvirt__domain_name => "beta.local"
  end

end

# DONE: Figure out how to unfuck https://vagrant-libvirt.github.io/vagrant-libvirt/configuration.html#networks
# https://wiki.libvirt.org/VirtualNetworking.html
# Using the bundled libvirt, with the upstream Hashicorp Vagrant release and 
# plugin seems like the most stable option in terms of moderately advanced
# networking.
